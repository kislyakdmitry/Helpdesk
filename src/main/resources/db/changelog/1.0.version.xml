<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="1" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM ticket_category</comment>
        <sql>
            CREATE TYPE ticket_category AS ENUM( 'Application and Services', 'Benefits and Paper Work', 'Hardware and Software',
                'People Management', 'Security and Access', 'Workplaces and Facilities' );
        </sql>
        <rollback>DROP TYPE ticket_category;</rollback>
    </changeSet>

    <changeSet id="2" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM user_role</comment>
        <sql>
            CREATE TYPE user_role AS ENUM( 'Employee', 'Manager', 'Engineer' );
        </sql>
        <rollback>DROP TYPE user_role;</rollback>
    </changeSet>

    <changeSet id="3" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Users</comment>
        <sql>
            CREATE TABLE Users
            (
                id          INT PRIMARY KEY,
                first_name  VARCHAR( 20 ) NOT NULL,
                last_name   VARCHAR( 25 ) NOT NULL,
                role        user_role NOT NULL,
                email       VARCHAR( 100 ) NOT NULL UNIQUE,
                password    VARCHAR( 20 ) NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Users;</rollback>
    </changeSet>

    <changeSet id="4" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Users</comment>
        <sql>
            CREATE SEQUENCE users_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE users_id_seq;</rollback>
    </changeSet>

    <changeSet id="5" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM ticket_state</comment>
        <sql>
            CREATE TYPE ticket_state AS ENUM( 'Draft', 'New', 'Approved', 'Declined', 'In Progress', 'Done', 'Canceled' );
        </sql>
        <rollback>DROP TYPE ticket_state;</rollback>
    </changeSet>

    <changeSet id="6" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM ticket_urgency</comment>
        <sql>
            CREATE TYPE ticket_urgency AS ENUM( 'Critical', 'High', 'Average', 'Low' );
        </sql>
        <rollback>DROP TYPE ticket_urgency;</rollback>
    </changeSet>

    <changeSet id="7" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Tickets</comment>
        <sql>
            CREATE TABLE Tickets
            (
                id                       INT PRIMARY KEY,
                name                     VARCHAR( 100 ) NOT NULL,
                description              VARCHAR( 500 ),
                created_on               DATE NOT NULL,
                desired_resolution_date  DATE NOT NULL,
                assignee_id              INT,
                owner_id                 INT NOT NULL,
                state                    ticket_state NOT NULL,
                category                 ticket_category NOT NULL,
                urgency                  ticket_urgency NOT NULL,
                approver_id              INT
            );
        </sql>
        <rollback>DROP TABLE Tickets;</rollback>
    </changeSet>

    <changeSet id="8" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Tickets</comment>
        <sql>
            CREATE SEQUENCE tickets_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE tickets_id_seq;</rollback>
    </changeSet>

    <changeSet id="9" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Feedbacks</comment>
        <sql>
            CREATE TABLE Feedbacks
            (
                id         INT PRIMARY KEY,
                user_id    INT NOT NULL,
                rate       SMALLINT NOT NULL,
                date       DATE NOT NULL,
                text       VARCHAR( 1000 ),
                ticket_id  INT NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Feedbacks;</rollback>
    </changeSet>

    <changeSet id="10" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Feedbacks</comment>
        <sql>
            CREATE SEQUENCE feedbacks_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE feedbacks_id_seq;</rollback>
    </changeSet>

    <changeSet id="11" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Attachments</comment>
        <sql>
            CREATE TABLE Attachments
            (
                id         INT PRIMARY KEY,
                blob       VARCHAR( 150 ) NOT NULL,
                ticket_id  INT NOT NULL,
                name       VARCHAR( 100 ) NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Attachments;</rollback>
    </changeSet>

    <changeSet id="12" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Attachments</comment>
        <sql>
            CREATE SEQUENCE attachments_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE attachments_id_seq;</rollback>
    </changeSet>

    <changeSet id="13" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Histories</comment>
        <sql>
            CREATE TABLE Histories
            (
                id           INT PRIMARY KEY,
                ticket_id    INT NOT NULL,
                date         DATE NOT NULL,
                action       VARCHAR( 300 ) NOT NULL,
                user_id      INT NOT NULL,
                description  VARCHAR( 500 )
            );
        </sql>
        <rollback>DROP TABLE Histories;</rollback>
    </changeSet>

    <changeSet id="14" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Histories</comment>
        <sql>
            CREATE SEQUENCE histories_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE histories_id_seq;</rollback>
    </changeSet>

    <changeSet id="15" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Comments</comment>
        <sql>
            CREATE TABLE Comments
            (
                id         INT PRIMARY KEY,
                user_id    INT NOT NULL,
                text       VARCHAR( 1000 ) NOT NULL,
                date       DATE NOT NULL,
                ticket_id  INT NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Comments;</rollback>
    </changeSet>

    <changeSet id="16" author="Alexey Zuevsky">
        <comment>1.0.version. Create sequence for id in Comments</comment>
        <sql>
            CREATE SEQUENCE comments_id_seq START 100 INCREMENT 50;
        </sql>
        <rollback>DROP SEQUENCE comments_id_seq;</rollback>
    </changeSet>

    <changeSet id="17" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_assignee_id to Tickets</comment>
        <sql>
            ALTER TABLE Tickets
                ADD CONSTRAINT fk_ticket_assignee_id FOREIGN KEY (assignee_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Tickets DROP FOREIGN KEY fk_ticket_assignee_id;</rollback>
    </changeSet>

    <changeSet id="18" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_owner_id to Tickets</comment>
        <sql>
            ALTER TABLE Tickets
                ADD CONSTRAINT fk_ticket_owner_id FOREIGN KEY (owner_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Tickets DROP FOREIGN KEY fk_ticket_owner_id;</rollback>
    </changeSet>

    <changeSet id="19" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_approver_id to Tickets</comment>
        <sql>
            ALTER TABLE Tickets
                ADD CONSTRAINT fk_ticket_approver_id FOREIGN KEY (approver_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Tickets DROP FOREIGN KEY fk_ticket_approver_id;</rollback>
    </changeSet>

    <changeSet id="20" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_feedback_user_id to Feedbacks</comment>
        <sql>
            ALTER TABLE Feedbacks
                ADD CONSTRAINT fk_feedback_user_id FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Feedbacks DROP FOREIGN KEY fk_feedback_user_id;</rollback>
    </changeSet>

    <changeSet id="21" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_feedback_ticket_id to Feedbacks</comment>
        <sql>
            ALTER TABLE Feedbacks
                ADD CONSTRAINT fk_feedback_ticket_id FOREIGN KEY (ticket_id) REFERENCES Tickets (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Feedbacks DROP FOREIGN KEY fk_feedback_ticket_id;</rollback>
    </changeSet>

    <changeSet id="22" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_attachment_ticket_id to Attachments</comment>
        <sql>
            ALTER TABLE Attachments
                ADD CONSTRAINT fk_attachment_ticket_id FOREIGN KEY (ticket_id) REFERENCES Tickets (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Attachments DROP FOREIGN KEY fk_attachment_ticket_id;</rollback>
    </changeSet>

    <changeSet id="23" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_history_ticket_id to Histories</comment>
        <sql>
            ALTER TABLE Histories
                ADD CONSTRAINT fk_history_ticket_id FOREIGN KEY (ticket_id) REFERENCES Tickets (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Histories DROP FOREIGN KEY fk_history_ticket_id;</rollback>
    </changeSet>

    <changeSet id="24" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_history_user_id to Histories</comment>
        <sql>
            ALTER TABLE Histories
                ADD CONSTRAINT fk_history_user_id FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Histories DROP FOREIGN KEY fk_history_user_id;</rollback>
    </changeSet>

    <changeSet id="25" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_comment_user_id to Comments</comment>
        <sql>
            ALTER TABLE Comments
                ADD CONSTRAINT fk_comment_user_id FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Comments DROP FOREIGN KEY fk_comment_user_id;</rollback>
    </changeSet>

    <changeSet id="26" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_comment_ticket_id to Comments</comment>
        <sql>
            ALTER TABLE Comments
                ADD CONSTRAINT fk_comment_ticket_id FOREIGN KEY (ticket_id) REFERENCES Tickets (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Comments DROP FOREIGN KEY fk_comment_ticket_id;</rollback>
    </changeSet>

</databaseChangeLog>