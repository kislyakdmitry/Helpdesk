<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="1" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM category_name</comment>
        <sql>
            CREATE TYPE category_name AS ENUM( 'Application and Services', 'Benefits and Paper Work', 'Hardware and Software',
            'People Management', 'Security and Access', 'Workplaces and Facilities' );
        </sql>
        <rollback>DROP TYPE category_name;</rollback>
    </changeSet>

    <changeSet id="2" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Category</comment>
        <sql>
            CREATE TABLE Category
            (
            id    SERIAL PRIMARY KEY,
            name  category_name NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Category;</rollback>
    </changeSet>

    <changeSet id="3" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM user_role_id</comment>
        <sql>
            CREATE TYPE user_role_id AS ENUM( 'Employee', 'Manager', 'Engineer' );
        </sql>
        <rollback>DROP TYPE user_role_id;</rollback>
    </changeSet>

    <changeSet id="4" author="Alexey Zuevsky">
        <comment>1.0.version. Create table UserCard</comment>
        <sql>
            CREATE TABLE UserCard
            (
            id          SERIAL PRIMARY KEY,
            first_name  VARCHAR( 20 ) NOT NULL,
            last_name   VARCHAR( 25 ) NOT NULL,
            role_id     user_role_id,
            email       VARCHAR( 100 ) NOT NULL UNIQUE,
            password    VARCHAR( 20 ) NOT NULL
            );
        </sql>
        <rollback>DROP TABLE UserCard;</rollback>
    </changeSet>

    <changeSet id="5" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM ticket_state_id</comment>
        <sql>
            CREATE TYPE ticket_state_id AS ENUM( 'Draft', 'New', 'Approved', 'Declined', 'In Progress', 'Done', 'Canceled' );
        </sql>
        <rollback>DROP TYPE ticket_state_id;</rollback>
    </changeSet>

    <changeSet id="6" author="Alexey Zuevsky">
        <comment>1.0.version. Create ENUM ticket_urgency_id</comment>
        <sql>
            CREATE TYPE ticket_urgency_id AS ENUM( 'Critical', 'High', 'Average', 'Low' );
        </sql>
        <rollback>DROP TYPE ticket_urgency_id;</rollback>
    </changeSet>

    <changeSet id="7" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Ticket</comment>
        <sql>
            CREATE TABLE Ticket
            (
            id                       SERIAL PRIMARY KEY,
            name                     VARCHAR( 100 ) NOT NULL,
            description              VARCHAR( 500 ) NOT NULL,
            created_on               TIMESTAMP NOT NULL,
            desired_resolution_date  DATE NOT NULL,
            assignee_id              INT NOT NULL,
            owner_id                 INT NOT NULL,
            state_id                 ticket_state_id,
            category_id              INT NOT NULL,
            urgency_id               ticket_urgency_id,
            approver_id              INT NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Ticket;</rollback>
    </changeSet>

    <changeSet id="8" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Feedback</comment>
        <sql>
            CREATE TABLE Feedback
            (
            id          SERIAL PRIMARY KEY,
            user_id INT NOT NULL,
            rate SMALLINT NOT NULL,
            date DATE NOT NULL,
            text VARCHAR( 1000 ),
            ticket_id INT NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Feedback;</rollback>
    </changeSet>

    <changeSet id="9" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Attachment</comment>
        <sql>
            CREATE TABLE Attachment
            (
            id         SERIAL PRIMARY KEY,
            blob       VARCHAR( 150 ) NOT NULL,
            ticket_id  INT NOT NULL,
            name       VARCHAR( 100 ) NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Attachment;</rollback>
    </changeSet>

    <changeSet id="10" author="Alexey Zuevsky">
        <comment>1.0.version. Create table History</comment>
        <sql>
            CREATE TABLE History
            (
            id           SERIAL PRIMARY KEY,
            ticket_id    INT NOT NULL,
            date         DATE NOT NULL,
            action       VARCHAR( 300 ) NOT NULL,
            user_id      INT NOT NULL,
            description  VARCHAR( 500 )
            );
        </sql>
        <rollback>DROP TABLE History;</rollback>
    </changeSet>

    <changeSet id="11" author="Alexey Zuevsky">
        <comment>1.0.version. Create table Comment</comment>
        <sql>
            CREATE TABLE Comment
            (
            id         SERIAL PRIMARY KEY,
            user_id    INT NOT NULL,
            text       VARCHAR( 1000 ) NOT NULL,
            date       DATE NOT NULL,
            ticket_id  INT NOT NULL
            );
        </sql>
        <rollback>DROP TABLE Comment;</rollback>
    </changeSet>

    <changeSet id="12" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_assignee_id to Ticket</comment>
        <sql>
            ALTER TABLE Ticket
            ADD CONSTRAINT fk_ticket_assignee_id FOREIGN KEY (assignee_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Ticket DROP FOREIGN KEY fk_ticket_assignee_id;</rollback>
    </changeSet>

    <changeSet id="13" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_owner_id to Ticket</comment>
        <sql>
            ALTER TABLE Ticket
            ADD CONSTRAINT fk_ticket_owner_id FOREIGN KEY (owner_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Ticket DROP FOREIGN KEY fk_ticket_owner_id;</rollback>
    </changeSet>

    <changeSet id="14" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_approver_id to Ticket</comment>
        <sql>
            ALTER TABLE Ticket
            ADD CONSTRAINT fk_ticket_approver_id FOREIGN KEY (approver_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Ticket DROP FOREIGN KEY fk_ticket_approver_id;</rollback>
    </changeSet>

    <changeSet id="15" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_ticket_category_id to Ticket</comment>
        <sql>
            ALTER TABLE Ticket
            ADD CONSTRAINT fk_ticket_category_id FOREIGN KEY (category_id) REFERENCES Category (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Ticket DROP FOREIGN KEY fk_ticket_category_id;</rollback>
    </changeSet>

    <changeSet id="16" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_feedback_user_id to Feedback</comment>
        <sql>
            ALTER TABLE Feedback
            ADD CONSTRAINT fk_feedback_user_id FOREIGN KEY (user_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Feedback DROP FOREIGN KEY fk_feedback_user_id;</rollback>
    </changeSet>

    <changeSet id="17" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_feedback_ticket_id to Feedback</comment>
        <sql>
            ALTER TABLE Feedback
            ADD CONSTRAINT fk_feedback_ticket_id FOREIGN KEY (ticket_id) REFERENCES Ticket (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Feedback DROP FOREIGN KEY fk_feedback_ticket_id;</rollback>
    </changeSet>

    <changeSet id="18" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_attachment_ticket_id to Attachment</comment>
        <sql>
            ALTER TABLE Attachment
            ADD CONSTRAINT fk_attachment_ticket_id FOREIGN KEY (ticket_id) REFERENCES Ticket (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Attachment DROP FOREIGN KEY fk_attachment_ticket_id;</rollback>
    </changeSet>

    <changeSet id="19" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_history_ticket_id to History</comment>
        <sql>
            ALTER TABLE History
            ADD CONSTRAINT fk_history_ticket_id FOREIGN KEY (ticket_id) REFERENCES Ticket (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE History DROP FOREIGN KEY fk_history_ticket_id;</rollback>
    </changeSet>

    <changeSet id="20" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_history_user_id to History</comment>
        <sql>
            ALTER TABLE History
            ADD CONSTRAINT fk_history_user_id FOREIGN KEY (user_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE History DROP FOREIGN KEY fk_history_user_id;</rollback>
    </changeSet>

    <changeSet id="21" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_comment_user_id to Comment</comment>
        <sql>
            ALTER TABLE Comment
            ADD CONSTRAINT fk_comment_user_id FOREIGN KEY (user_id) REFERENCES UserCard (id) ON DELETE RESTRICT;
        </sql>
        <rollback>ALTER TABLE Comment DROP FOREIGN KEY fk_comment_user_id;</rollback>
    </changeSet>

    <changeSet id="22" author="Alexey Zuevsky">
        <comment>1.0.version. Create fk_comment_ticket_id to Comment</comment>
        <sql>
            ALTER TABLE Comment
            ADD CONSTRAINT fk_comment_ticket_id FOREIGN KEY (ticket_id) REFERENCES Ticket (id) ON DELETE CASCADE;
        </sql>
        <rollback>ALTER TABLE Comment DROP FOREIGN KEY fk_comment_ticket_id;</rollback>
    </changeSet>

</databaseChangeLog>
