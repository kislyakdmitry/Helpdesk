plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = 'innowise.zuevsky'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
    set('testcontainersVersion', "1.16.2")
    set('keycloakVersion', '18.0.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.liquibase:liquibase-core'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation'org.postgresql:postgresql'
    implementation 'org.keycloak:keycloak-spring-boot-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation 'org.springframework.security:spring-security-oauth2-resource-server:5.6.3'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.16.3'
    testImplementation 'org.testcontainers:postgresql'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation('org.projectlombok:lombok:1.18.22')
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation('org.projectlombok:lombok:1.18.22')
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation platform('org.testcontainers:testcontainers-bom:1.16.3')
    implementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
    }
}



test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "innowise/zuevsky/helpdesk/dto/*Dto.*",
                    "**/domain/*",
                    "**/response/*",
                    "**/config/*",
                    "**/specification/*"
            ])
        }))
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "kislyakdmitry_Helpdesk_AX__tPAjOMfz8VAl1un8"
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}